from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from AiPromptComposerApi.models.base_model import Model
from AiPromptComposerApi import util


class PostPromptRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, user_prompt=None, system_prompt=None, input_data=None, template=None):  # noqa: E501
        """PostPromptRequest - a model defined in OpenAPI

        :param user_prompt: The user_prompt of this PostPromptRequest.  # noqa: E501
        :type user_prompt: str
        :param system_prompt: The system_prompt of this PostPromptRequest.  # noqa: E501
        :type system_prompt: str
        :param input_data: The input_data of this PostPromptRequest.  # noqa: E501
        :type input_data: object
        :param template: The template of this PostPromptRequest.  # noqa: E501
        :type template: str
        """
        self.openapi_types = {
            'user_prompt': str,
            'system_prompt': str,
            'input_data': object,
            'template': str
        }

        self.attribute_map = {
            'user_prompt': 'userPrompt',
            'system_prompt': 'systemPrompt',
            'input_data': 'inputData',
            'template': 'template'
        }

        self._user_prompt = user_prompt
        self._system_prompt = system_prompt
        self._input_data = input_data
        self._template = template

    @classmethod
    def from_dict(cls, dikt) -> 'PostPromptRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PostPromptRequest of this PostPromptRequest.  # noqa: E501
        :rtype: PostPromptRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def user_prompt(self) -> str:
        """Gets the user_prompt of this PostPromptRequest.

        The input message from a user. Use '{userPrompt}'' as placeholder in template.  # noqa: E501

        :return: The user_prompt of this PostPromptRequest.
        :rtype: str
        """
        return self._user_prompt

    @user_prompt.setter
    def user_prompt(self, user_prompt: str):
        """Sets the user_prompt of this PostPromptRequest.

        The input message from a user. Use '{userPrompt}'' as placeholder in template.  # noqa: E501

        :param user_prompt: The user_prompt of this PostPromptRequest.
        :type user_prompt: str
        """
        if user_prompt is None:
            raise ValueError("Invalid value for `user_prompt`, must not be `None`")  # noqa: E501

        self._user_prompt = user_prompt

    @property
    def system_prompt(self) -> str:
        """Gets the system_prompt of this PostPromptRequest.

        The specific instructions to the LLM on how to execute the tasks. Use '{systemPrompt}'' as placeholder in template.  # noqa: E501

        :return: The system_prompt of this PostPromptRequest.
        :rtype: str
        """
        return self._system_prompt

    @system_prompt.setter
    def system_prompt(self, system_prompt: str):
        """Sets the system_prompt of this PostPromptRequest.

        The specific instructions to the LLM on how to execute the tasks. Use '{systemPrompt}'' as placeholder in template.  # noqa: E501

        :param system_prompt: The system_prompt of this PostPromptRequest.
        :type system_prompt: str
        """
        if system_prompt is None:
            raise ValueError("Invalid value for `system_prompt`, must not be `None`")  # noqa: E501

        self._system_prompt = system_prompt

    @property
    def input_data(self) -> object:
        """Gets the input_data of this PostPromptRequest.

        JSON of additional data containing the customers information. Use '{inputData}'' as placeholder in template.  # noqa: E501

        :return: The input_data of this PostPromptRequest.
        :rtype: object
        """
        return self._input_data

    @input_data.setter
    def input_data(self, input_data: object):
        """Sets the input_data of this PostPromptRequest.

        JSON of additional data containing the customers information. Use '{inputData}'' as placeholder in template.  # noqa: E501

        :param input_data: The input_data of this PostPromptRequest.
        :type input_data: object
        """
        if input_data is None:
            raise ValueError("Invalid value for `input_data`, must not be `None`")  # noqa: E501

        self._input_data = input_data

    @property
    def template(self) -> str:
        """Gets the template of this PostPromptRequest.

        The template to define how the prompt data gets assembled into one prompt string.  # noqa: E501

        :return: The template of this PostPromptRequest.
        :rtype: str
        """
        return self._template

    @template.setter
    def template(self, template: str):
        """Sets the template of this PostPromptRequest.

        The template to define how the prompt data gets assembled into one prompt string.  # noqa: E501

        :param template: The template of this PostPromptRequest.
        :type template: str
        """
        if template is None:
            raise ValueError("Invalid value for `template`, must not be `None`")  # noqa: E501

        self._template = template
